package handlers

import (
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/lowitea/jeevez/internal/models"
	"github.com/lowitea/jeevez/internal/structs"
	"gorm.io/gorm"
	"gorm.io/gorm/clause"
	"log"
)

// UpdateChatInfoHandler –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
func UpdateChatInfoHandler(update tgbotapi.Update, db *gorm.DB) {
	var chat models.Chat
	db.First(&chat, "tg_id = ?", update.Message.Chat.ID)
	chat.TgName = update.Message.Chat.UserName
	chat.TgTitle = update.Message.Chat.Title
	chat.TgType = update.Message.Chat.Type
	db.Save(&chat)
}

// StartHandler –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –¥–æ–±–∞–≤–ª—è–µ—Ç —á–∞—Ç–∏–∫ –≤ –±–∞–∑—É
func StartHandler(update tgbotapi.Update, bot structs.Bot, db *gorm.DB) {
	if update.Message.Text != "/start" {
		return
	}

	msgText := "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø –í–∞—à –ª–∏—á–Ω—ã–π –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫. ü§µüèª\n"

	chat := models.Chat{TgID: update.Message.Chat.ID}
	if result := db.Clauses(clause.OnConflict{DoNothing: true}).Create(&chat); result.Error != nil {
		log.Printf("create User error: %s", result.Error)
		msgText = msgText +
			"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –í–∞—Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å, " +
			"–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–∑–∂–µ, —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start ):"
	} else {
		msgText = msgText +
			"–ì–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å –≤—Å–µ–º, —á–µ–º —É–º–µ—é. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –ø–æ–¥—Ä–æ–±–Ω–µ–µ, " +
			"–ø—Ä–µ–¥–ª–∞–≥–∞—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /help :)"
	}

	msg := tgbotapi.NewMessage(update.Message.Chat.ID, msgText)
	_, _ = bot.Send(msg)
}
